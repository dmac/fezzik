#!/usr/bin/env ruby
require "colorize"

files = {
  "config/deploy.rb" => <<-'EOF',
# This is the configuration file for fezzik.
# Define variables here as you would for Vlad the Deployer.
# A full list of variables can be found here:
#     http://hitsquad.rubyforge.org/vlad/doco/variables_txt.html

set :app, "app"
set :deploy_to, "/opt/#{app}"
set :release_path, "#{deploy_to}/releases/#{Time.now.strftime("%Y%m%d%H%M")}"
set :local_path, Dir.pwd
set :user, "root"


# Each destination is a set of machines and configurations to deploy to.
# You can deploy to a destination from the command line with:
#     fez to_dev deploy
#
# :domain can be an array if you are deploying to multiple hosts.
#
# You can set environment variables that will be loaded at runtime on the server
# like this:
#     env :rack_env, "production"
# This will also generate a file on the server named config/environment.rb, which you can include
# in your code to load these variables as Ruby constants. You can create your own config/environment.rb
# file to use for development, and it will be overwritten at runtime.

destination :dev do
  set :domain, "#{user}@dev.example.com"
end

destination :prod do
  set :domain, "#{user}@prod.example.com"
end
  EOF

  "config/recipes/core.rb" => <<-'EOF',
# This file contains core tasks that are used to deploy your application to the
# destination servers. This is a decent initial setup, but is completely configurable.

namespace :fezzik do
  # Any variables set in deploy.rb with "env" will be saved on the server in two files:
  # config/environment.sh and config/environment.rb. The first is loaded into the shell
  # environment before the run script is called, and the second is made available to
  # be required into your code. You can use your own environment.rb file for development,
  # and it will be overwritten by this task when the code deploys.
  desc "saves variables set by 'env' in deploy.rb into config/environment.sh and config/environment.rb"
  task :save_environment do
    system("mkdir -p /tmp/#{app}/config")
    File.open("/tmp/#{app}/config/environment.rb", "w") do |file|
      @environment.each do |key, value|
        file.puts "#{key.to_s.upcase}=\"#{value}\""
      end
    end
    File.open("/tmp/#{app}/config/environment.sh", "w") do |file|
      @environment.each do |key, value|
        file.puts "export #{key.to_s.upcase}=\"#{value}\""
      end
    end
  end

  desc "stages the project for deployment in /tmp"
  task :stage do
    puts "staging project in /tmp/#{app}"
    system("rm -fr /tmp/#{app}")
    system("cp -r #{local_path} /tmp/#{app}")
    Rake::Task["fezzik:save_environment"].invoke
  end

  desc "performs any necessary setup on the destination servers prior to deployment"
  remote_task :setup do
    puts "setting up servers"
    run "mkdir -p #{deploy_to}/releases"
  end

  desc "rsyncs the project from its stages location to each destination server"
  remote_task :push => [:stage, :setup] do
    puts "pushing to #{target_host}:#{release_path}"
    # Copy on top of previous release to optimize rsync
    rsync "-q", "--copy-dest=#{current_path}", "/tmp/#{app}/", "#{target_host}:#{release_path}"
  end

  desc "symlinks the latest deployment to /deploy_path/project/current"
  remote_task :symlink do
    puts "symlinking current to #{release_path}"
    run "cd #{deploy_to} && ln -fns #{release_path} current"
  end

  desc "runs the executable in project/bin"
  remote_task :start do
    puts "starting from #{capture_output { run "readlink #{current_path}" }}"
    run "cd #{current_path} && source config/environment.sh && ./bin/run_app.sh"
  end

  desc "kills the application by searching for the specified process name"
  remote_task :stop do
    puts "stopping app"
    # Replace YOUR_APP_NAME with whatever is run from your bin/run_app.sh file.
    # run "(kill -9 `ps aux | grep 'YOUR_APP_NAME' | grep -v grep | awk '{print $2}'` || true)"
  end

  desc "restarts the application"
  remote_task :restart do
    Rake::Task["fezzik:stop"].invoke
    Rake::Task["fezzik:start"].invoke
  end

  desc "full deployment pipeline"
  task :deploy do
    Rake::Task["fezzik:push"].invoke
    Rake::Task["fezzik:symlink"].invoke
    Rake::Task["fezzik:restart"].invoke
    puts "#{app} deployed!"
  end
end
  EOF

  "bin/run_app.sh" => <<-'EOF'
#!/bin/sh
# This file will be called to start your application.
  EOF
}

system("mkdir -p config/recipes")
system("mkdir -p bin")

files.each do |filename, content|
  if File.exists?(filename) && ARGV[0] != "-f"
    puts "    [skip] #{filename} already exists"
  else
    puts "    [new]  #{filename} created".green
    File.open(filename, "w") { |file| file.write(content) }
    if filename == "bin/run_app.sh"
      system("chmod a+x bin/run_app.sh")
    end
  end
end

puts "    [done]".green
